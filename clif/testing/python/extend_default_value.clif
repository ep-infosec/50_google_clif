# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from "clif/testing/python/extend_default_value_clif_aux.h":
  namespace `clif_testing`:
    class Abc:
      def __init__(self, v: int)

      def get_value(self) -> int

      @extend
      def sum_and_set_values(self, v1: int = default, v2: int = default)

      @extend
      def pass_unique_ptr_kv(self, kv: `std::map` as dict<int, int> = default) -> int

      @extend
      def pass_unique_ptr_kv_v(self, kv: `std::map` as dict<int, int> = default, v: int = default) -> int

      @extend
      def pass_unique_ptr_v_kv(self, v: int = default, kv: `std::map` as dict<int, int> = default) -> int

      @extend
      def pass_unique_ptr_v_kv_w(self, v: int = default, kv: `std::map` as dict<int, int> = default, w: int = default) -> int

    class DefaultValueInConstructor:
      @extend
      def __init__(self, v: int = default)

      value: int

    class TestNestedDefaultValue:
      class Inner:
        def __init__(self, v: int)

        @extend
        def get_value(self, w: int = default) -> int
